emborg without configs:

    better:
        args: version
        expected: emborg version: \d+\.\d+(\.\d+(\.?\w+\d+)?)? \(\d\d\d\d-\d\d-\d\d\) \[Python \d\.\d+\.\d+\]\.
        expected_type: regex
        remove: .config

    suburb:
        args: help
        expected:
            > Emborg Backups
            >
            > Backs up the contents of a file hierarchy.  A front end for Borg's
            > encrypted incremental backup utility.
            >
            > Usage:
            >     emborg [options] [<command> [<args>...]]
            >
            > Options:
            >     -c <cfgname>, --config <cfgname>  Specifies the configuration to use.
            >     -d, --dry-run                     Run Borg in dry run mode.
            >     -h, --help                        Output basic usage information.
            >     -m, --mute                        Suppress all output.
            >     -n, --narrate                     Send emborg and Borg narration to stdout.
            >     -q, --quiet                       Suppress optional output.
            >     -r, --relocated                   Acknowledge that repository was relocated.
            >     -v, --verbose                     Make Borg more verbose.
            >     --no-log                          Do not create log file.
            >
            > Available commands:
            >     borg              run a raw borg command
            >     breaklock, break-lock
            >                       breaks the repository and cache locks
            >     check             checks the repository and its archives
            >     compact           compact segment files in the repository
            >     compare           compare local files or directories to those in an archive
            >     configs           list available backup configurations
            >     create, backup    create an archive of the current files
            >     delete            delete an archive currently contained in the repository
            >     diff              show the differences between two archives
            >     due               days since last backup
            >     extract           recover file or files from archive
            >     help              give information about commands or other topics
            >     info              display metadata for a repository or archive
            >     init, initialize  initialize the repository
            >     list, lr, archives
            >                       display available archives
            >     log               display log for the last emborg run
            >     manifest, m, la, files, f
            >                       list the files contained in an archive
            >     mount             mount a repository or archive
            >     prune             prune the repository of excess archives
            >     restore           restore requested files or directories in place
            >     settings, setting
            >                       display settings of chosen configuration
            >     umount, unmount   un-mount a previously mounted repository or archive
            >     version           display emborg version
            >
            > Available topics:
            >     overview          overview of emborg
            >     precautions       what everybody should know before using emborg

    watch:
        args: settings --available
        expected:
            > Emborg settings:
            >                    archive: template Borg should use when creating archive
            >                             names
            >         avendesora_account: account name that holds passphrase for
            >                             encryption key in Avendesora
            >           avendesora_field: name of field in Avendesora that holds the
            >                             passphrase
            >            borg_executable: path to borg
            >         check_after_create: run check as the last step of an archive
            >                             creation
            >                   cmd_name: name of Emborg command being run (read only)
            >                colorscheme: the color scheme
            >       compact_after_delete: run compact after deleting an archive or
            >                             pruning a repository
            >                 config_dir: absolute path to configuration directory
            >                             (read-only)
            >                config_name: name of active configuration (read only)
            >             configurations: available Emborg configurations
            >                cronhub_url: the cronhub.io URL for back-ups monitor
            >               cronhub_uuid: the cronhub.io UUID for back-ups monitor
            >      default_configuration: default Emborg configuration
            >        default_mount_point: directory to use as mount point if one is not
            >                             specified
            >              do_not_expand: names of settings that must not undergo
            >                             setting evaluation
            >                   encoding: encoding when talking to borg
            >                 encryption: encryption method (see Borg documentation)
            >               exclude_from: file that contains exclude patterns
            >                   excludes: list of glob strings of files or directories
            >                             to skip
            >           healthchecks_url: the healthchecks.io URL for back-ups monitor
            >          healthchecks_uuid: the healthchecks.io UUID for back-ups monitor
            >                   home_dir: users home directory (read only)
            >                    include: include the contents of another file
            >                    log_dir: emborg log directory (read only)
            >           manage_diffs_cmd: command to use to manage differences in files
            >                             and directories
            >    manifest_default_format: the format that manifest should use if none is
            >                             specified
            >           manifest_formats: format strings used by manifest
            >                 must_exist: if set, each of these files or directories
            >                             must exist or create will quit with an error
            >            needs_ssh_agent: if set, Emborg will complain if ssh_agent is
            >                             not available
            >                   notifier: notification program
            >                     notify: email address to notify when things go wrong
            >                passcommand: command used by Borg to acquire the passphrase
            >                 passphrase: passphrase for encryption key (if specified,
            >                             Avendesora is not used)
            >                   patterns: patterns that indicate whether a path should
            >                             be included or excluded
            >              patterns_from: file that contains patterns
            >         prune_after_create: run prune after creating an archive
            >           report_diffs_cmd: shell command to use to report differences in
            >                             files and directories
            >                 repository: path to remote directory that contains
            >                             repository
            >           run_after_backup: commands to run after archive has been created
            >             run_after_borg: commands to run after last Borg command has
            >                             run
            >      run_after_last_backup: commands to run after last archive has been
            >                             created
            >          run_before_backup: commands to run before archive is created
            >            run_before_borg: commands to run before first Borg command is
            >                             run
            >    run_before_first_backup: commands to run before first archive is
            >                             created
            >              show_progress: show borg progress when running create command
            >                 show_stats: show borg statistics when running create,
            >                             delete, and prune commands
            >                   src_dirs: the directories to archive
            >                ssh_command: command to use for SSH, can be used to specify
            >                             SSH options
            >                    verbose: make Borg more verbose
            >                working_dir: working directory
            >
            > Borg settings:
            >                append_only: create an append-only mode repository
            >             chunker_params: specify the chunker parameters
            >                compression: compression algorithm
            >             exclude_caches: exclude directories that contain a
            >                             CACHEDIR.TAG file
            >         exclude_if_present: exclude directories that are tagged by
            >                             containing a filesystem object with the given
            >                             NAME
            >             exclude_nodump: exclude files flagged NODUMP
            >              glob_archives: only consider archive names matching the glob
            >                 keep_daily: number of daily archives to keep
            >                keep_hourly: number of hourly archives to keep
            >                  keep_last: number of the most recent archives to keep
            >              keep_minutely: number of minutely archives to keep
            >               keep_monthly: number of monthly archives to keep
            >                keep_weekly: number of weekly archives to keep
            >                keep_within: keep all archives within this time interval
            >                keep_yearly: number of yearly archives to keep
            >                  lock_wait: wait at most SECONDS for acquiring a
            >                             repository/cache lock (default: 1)
            >            one_file_system: stay in the same file system and do not store
            >                             mount points of other file systems
            >                     prefix: only consider archive names starting with this
            >                             prefix
            >                remote_path: name of borg executable on remote platform
            >           remote_ratelimit: set remote network upload rate limit in kiB/s
            >                             (default: 0=unlimited)
            >                     sparse: detect sparse holes in input (supported only
            >                             by fixed chunker)
            >                  threshold: set minimum threshold in percent for saved
            >                             space when compacting (default: 10)
            >                      umask: set umask to M (local and remote, default:
            >                             0077)
            >              upload_buffer: set network upload buffer size in MiB
            >                             (default: 0=no buffer)
            >           upload_ratelimit: set rate limit in kiB/s, used when writing to
            >                             a remote network (default: 0=unlimited)

    labor:
        args:
        expected:
            > Configuration directory created: /⟪EMBORG⟫/tests/.config/emborg.
            > Includes example settings files. Edit them to suit your needs.
            > Search for and replace any fields delimited with ⟪ and ⟫.
            > Delete any configurations you do not need.
            > Generally you will use either home or root, but not both.

    jerkin:
        remove: .config


emborg with configs:

    idiocy:
        args: version
        expected: emborg version: \d+\.\d+(\.\d+(\.?\w+\d+)?)? \(\d\d\d\d-\d\d-\d\d\) \[Python \d\.\d+\.\d+\]\.
        expected_type: regex

    heathen:
        args: settings --available
        expected:
            > Emborg settings:
            >                    archive: template Borg should use when creating archive
            >                             names
            >         avendesora_account: account name that holds passphrase for
            >                             encryption key in Avendesora
            >           avendesora_field: name of field in Avendesora that holds the
            >                             passphrase
            >            borg_executable: path to borg
            >         check_after_create: run check as the last step of an archive
            >                             creation
            >                   cmd_name: name of Emborg command being run (read only)
            >                colorscheme: the color scheme
            >       compact_after_delete: run compact after deleting an archive or
            >                             pruning a repository
            >                 config_dir: absolute path to configuration directory
            >                             (read-only)
            >                config_name: name of active configuration (read only)
            >             configurations: available Emborg configurations
            >                cronhub_url: the cronhub.io URL for back-ups monitor
            >               cronhub_uuid: the cronhub.io UUID for back-ups monitor
            >      default_configuration: default Emborg configuration
            >        default_mount_point: directory to use as mount point if one is not
            >                             specified
            >              do_not_expand: names of settings that must not undergo
            >                             setting evaluation
            >                   encoding: encoding when talking to borg
            >                 encryption: encryption method (see Borg documentation)
            >               exclude_from: file that contains exclude patterns
            >                   excludes: list of glob strings of files or directories
            >                             to skip
            >           healthchecks_url: the healthchecks.io URL for back-ups monitor
            >          healthchecks_uuid: the healthchecks.io UUID for back-ups monitor
            >                   home_dir: users home directory (read only)
            >                    include: include the contents of another file
            >                    log_dir: emborg log directory (read only)
            >           manage_diffs_cmd: command to use to manage differences in files
            >                             and directories
            >    manifest_default_format: the format that manifest should use if none is
            >                             specified
            >           manifest_formats: format strings used by manifest
            >                 must_exist: if set, each of these files or directories
            >                             must exist or create will quit with an error
            >            needs_ssh_agent: if set, Emborg will complain if ssh_agent is
            >                             not available
            >                   notifier: notification program
            >                     notify: email address to notify when things go wrong
            >                passcommand: command used by Borg to acquire the passphrase
            >                 passphrase: passphrase for encryption key (if specified,
            >                             Avendesora is not used)
            >                   patterns: patterns that indicate whether a path should
            >                             be included or excluded
            >              patterns_from: file that contains patterns
            >         prune_after_create: run prune after creating an archive
            >           report_diffs_cmd: shell command to use to report differences in
            >                             files and directories
            >                 repository: path to remote directory that contains
            >                             repository
            >           run_after_backup: commands to run after archive has been created
            >             run_after_borg: commands to run after last Borg command has
            >                             run
            >      run_after_last_backup: commands to run after last archive has been
            >                             created
            >          run_before_backup: commands to run before archive is created
            >            run_before_borg: commands to run before first Borg command is
            >                             run
            >    run_before_first_backup: commands to run before first archive is
            >                             created
            >              show_progress: show borg progress when running create command
            >                 show_stats: show borg statistics when running create,
            >                             delete, and prune commands
            >                   src_dirs: the directories to archive
            >                ssh_command: command to use for SSH, can be used to specify
            >                             SSH options
            >                    verbose: make Borg more verbose
            >                working_dir: working directory
            >
            > Borg settings:
            >                append_only: create an append-only mode repository
            >             chunker_params: specify the chunker parameters
            >                compression: compression algorithm
            >             exclude_caches: exclude directories that contain a
            >                             CACHEDIR.TAG file
            >         exclude_if_present: exclude directories that are tagged by
            >                             containing a filesystem object with the given
            >                             NAME
            >             exclude_nodump: exclude files flagged NODUMP
            >              glob_archives: only consider archive names matching the glob
            >                 keep_daily: number of daily archives to keep
            >                keep_hourly: number of hourly archives to keep
            >                  keep_last: number of the most recent archives to keep
            >              keep_minutely: number of minutely archives to keep
            >               keep_monthly: number of monthly archives to keep
            >                keep_weekly: number of weekly archives to keep
            >                keep_within: keep all archives within this time interval
            >                keep_yearly: number of yearly archives to keep
            >                  lock_wait: wait at most SECONDS for acquiring a
            >                             repository/cache lock (default: 1)
            >            one_file_system: stay in the same file system and do not store
            >                             mount points of other file systems
            >                     prefix: only consider archive names starting with this
            >                             prefix
            >                remote_path: name of borg executable on remote platform
            >           remote_ratelimit: set remote network upload rate limit in kiB/s
            >                             (default: 0=unlimited)
            >                     sparse: detect sparse holes in input (supported only
            >                             by fixed chunker)
            >                  threshold: set minimum threshold in percent for saved
            >                             space when compacting (default: 10)
            >                      umask: set umask to M (local and remote, default:
            >                             0077)
            >              upload_buffer: set network upload buffer size in MiB
            >                             (default: 0=no buffer)
            >           upload_ratelimit: set rate limit in kiB/s, used when writing to
            >                             a remote network (default: 0=unlimited)

    weave:
        args: version
        expected: emborg version: \d+\.\d+(\.\d+(\.?\w+\d+)?)? \(\d\d\d\d-\d\d-\d\d\) \[Python \d\.\d+\.\d+\]\.
        expected_type: regex

    plateful:
        args: --quiet configs
        expected:
            > Available Configurations:
            >     test0
            >     test1
            >     test2
            >     test3
            >     test4
            >     test5
            >     test6
            >     test7
            >     test8
            >     test9
            >     tests=test0,test1,test2,test3
            >
            > Default Configuration:
            >     tests

    periphery:
        args: --quiet --config test0 settings
        expected:
            >                 archive: '{config_name}-{{now}}'
            >                          'test0-{now}'
            >      check_after_create: True
            >                cmd_name: 'settings'
            >              config_dir: '/⟪EMBORG⟫/tests/.config/emborg'
            >             config_name: 'test0'
            >          configurations: """
            >                              test0 test1 test2 test3 test4 test5 test6 test7 test8 test9
            >                              tests=test0,test1,test2,test3
            >                          """
            >   default_configuration: 'tests'
            >              encryption: 'none'
            >          exclude_caches: True
            >      exclude_if_present: '.nobackup'
            >                excludes: [
            >                              'fm:*/.viminfo',
            >                              'sh:**/.*.swp',
            >                              'sh:**/.*.swo',
            >                          ]
            >           glob_archives: '{config_name}-*'
            >                          'test0-*'
            >                home_dir: '/⟪EMBORG⟫/tests'
            >             keep_within: '1d'
            >                 log_dir: '/⟪EMBORG⟫/tests/.local/share/emborg'
            >      prune_after_create: True
            >              repository: '~/repositories'
            >        run_after_backup: """
            >                              # this line is ignored
            >                              echo run_after_backup on test0
            >                          """
            >          run_after_borg: 'echo run_after_borg on test0'
            >   run_after_last_backup: ['echo run_after_last_backup on test0']
            >       run_before_backup: """
            >                              # this line is ignored
            >                              echo run_before_backup on test0
            >                          """
            >         run_before_borg: ['echo run_before_borg on test0']
            > run_before_first_backup: 'echo run_before_first_backup on test0'
            >                src_dirs: ['~/configs']

    mushroom:
        args: --quiet --config test0 init
        expected:
            > run_before_borg on test0
            > run_after_borg on test0

    fetus:
        args: --config test0 list
        expected:
            > run_before_borg on test0
            > run_after_borg on test0

    hovel:
        args: --config test0 files
        expected:
            > run_before_borg on test0
            > emborg error: no archives are available.
            > run_after_borg on test0
        expected_type: error

    gravy:
        args: --quiet create
        expected:
            > run_before_first_backup on test0
            > run_before_backup on test0
            > run_before_borg on test0
            > run_after_backup on test0
            > run_after_borg on test0
            > run_before_backup on test1
            > run_before_borg on test1
            > run_after_backup on test1
            > run_after_borg on test1
            > run_before_backup on test2
            > run_before_borg on test2
            > run_after_backup on test2
            > run_after_borg on test2
            > run_before_backup on test3
            > run_before_borg on test3
            > run_after_backup on test3
            > run_after_last_backup on test3
            > run_after_borg on test3

    motif:
        args: --quiet --config test0 list
        expected:
            > run_before_borg on test0
            > test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > run_after_borg on test0
        expected_type: regex

    historian:
        args: --quiet --config test0 list --include-external
        expected:
            > run_before_borg on test0
            > test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test1-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test2-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test3-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > run_after_borg on test0
        expected_type: regex

    pipeline:
        args: --quiet --config test2 delete
        expected:
            > run_before_borg on test2
            > run_after_borg on test2

    facial:
        args: --quiet --config test0 list --include-external
        expected:
            > run_before_borg on test0
            > test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test1-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test3-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > run_after_borg on test0
        expected_type: regex

    gouge:
        args: --quiet --config test0 manifest --name --sort-by-name
        expected:
            > run_before_borg on test0
            > Archive: test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > ⟪EMBORG⟫/tests/configs
            > ⟪EMBORG⟫/tests/configs/README
            > ⟪EMBORG⟫/tests/configs/overdue.conf
            > ⟪EMBORG⟫/tests/configs/settings
            > ⟪EMBORG⟫/tests/configs/subdir
            > ⟪EMBORG⟫/tests/configs/subdir/file
            > ⟪EMBORG⟫/tests/configs/test0
            > ⟪EMBORG⟫/tests/configs/test1
            > ⟪EMBORG⟫/tests/configs/test2
            > ⟪EMBORG⟫/tests/configs/test2excludes
            > ⟪EMBORG⟫/tests/configs/test2passphrase
            > ⟪EMBORG⟫/tests/configs/test3
            > ⟪EMBORG⟫/tests/configs/test4
            > ⟪EMBORG⟫/tests/configs/test5
            > ⟪EMBORG⟫/tests/configs/test6
            > ⟪EMBORG⟫/tests/configs/test6patterns
            > ⟪EMBORG⟫/tests/configs/test7
            > ⟪EMBORG⟫/tests/configs/test7patterns
            > ⟪EMBORG⟫/tests/configs/test8
            > ⟪EMBORG⟫/tests/configs/test9
            > run_after_borg on test0
        expected_type: regex

    shiver:
        args: --quiet --config test0 manifest --name --sort-by-name /⟪EMBORG⟫/tests/configs/test
        expected:
            > run_before_borg on test0
            > Archive: test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > ⟪EMBORG⟫/tests/configs/test0
            > ⟪EMBORG⟫/tests/configs/test1
            > ⟪EMBORG⟫/tests/configs/test2
            > ⟪EMBORG⟫/tests/configs/test2excludes
            > ⟪EMBORG⟫/tests/configs/test2passphrase
            > ⟪EMBORG⟫/tests/configs/test3
            > ⟪EMBORG⟫/tests/configs/test4
            > ⟪EMBORG⟫/tests/configs/test5
            > ⟪EMBORG⟫/tests/configs/test6
            > ⟪EMBORG⟫/tests/configs/test6patterns
            > ⟪EMBORG⟫/tests/configs/test7
            > ⟪EMBORG⟫/tests/configs/test7patterns
            > ⟪EMBORG⟫/tests/configs/test8
            > ⟪EMBORG⟫/tests/configs/test9
            > run_after_borg on test0
        expected_type: regex

    whiplash:
        args: --quiet create
        expected:
            > run_before_first_backup on test0
            > run_before_backup on test0
            > run_before_borg on test0
            > run_after_backup on test0
            > run_after_borg on test0
            > run_before_backup on test1
            > run_before_borg on test1
            > run_after_backup on test1
            > run_after_borg on test1
            > run_before_backup on test2
            > run_before_borg on test2
            > run_after_backup on test2
            > run_after_borg on test2
            > run_before_backup on test3
            > run_before_borg on test3
            > run_after_backup on test3
            > run_after_last_backup on test3
            > run_after_borg on test3

    kindness:
        args: --quiet --config test0 list --include-external
        expected:
            > run_before_borg on test0
            > test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test1-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test3-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test1-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test2-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test3-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > run_after_borg on test0
        expected_type: regex

    spoof:
        args: --quiet --config test0 prune
        expected:
            > run_before_borg on test0
            > run_after_borg on test0

    librarian:
        args: --quiet --config test0 prune --include-external
        expected:
            > run_before_borg on test0
            > run_after_borg on test0

    feminist:
        args: --quiet --config test0 check
        expected:
            > run_before_borg on test0
            > run_after_borg on test0

    creosote:
        args: --quiet --config test0 check --all
        expected:
            > run_before_borg on test0
            > run_after_borg on test0

    covering:
        args: --quiet --config test0 check --include-external
        expected:
            > run_before_borg on test0
            > run_after_borg on test0

    scroll:
        args: --quiet --config test0 list --include-external
        expected:
            > run_before_borg on test0
            > test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test1-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test3-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test0-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test1-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test2-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > test3-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > run_after_borg on test0
        expected_type: regex

    magnate:
        args: --quiet due
        expected:
            > test0 backup completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
            > test0 check completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
            >
            > test1 backup completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
            > test1 check completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
            >
            > test2 backup completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
            > test2 check completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
            >
            > test3 backup completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
            > test3 check completed (just now|(\d+(\.\d)? )?(seconds?|minutes?)) ago\.
        expected_type: regex

    build:
        args: --quiet --config test0 info
        expected:
            >               config: test0
            >                roots: /⟪EMBORG⟫/tests/configs
            >          destination: /⟪EMBORG⟫/tests/repositories
            >   settings directory: /⟪EMBORG⟫/tests/.config/emborg
            >              logfile: /⟪EMBORG⟫/tests/.local/share/emborg/test0.log
            >      create last run: .*
            >       prune last run: .*
            >       check last run: .*
            > run_before_borg on test0
            >
            > Repository ID: \w*
            > Location: /⟪EMBORG⟫/tests/repositories
            > Encrypted: No
            > Cache: /⟪EMBORG⟫/tests/.cache/borg/\w+
            > Security dir: /⟪EMBORG⟫/tests/.config/borg/security/\w+
            > ------------------------------------------------------------------------------
            >                        Original size      Compressed size    Deduplicated size
            > All archives:          .............      ...............    .................
            >
            >                        Unique chunks         Total chunks
            > Chunk index:           .............         ............
            > run_after_borg on test0
        expected_type: regex

    thresh:
        args: --quiet --config test0 extract /⟪EMBORG⟫/tests/configs
        expected:
            > run_before_borg on test0
            > run_after_borg on test0
        cmp_dirs: /⟪EMBORG⟫/tests/STARTING_CONFIGS configs

    oddment:
        remove: configs
        args: --quiet --config test0 restore configs
        expected:
            > run_before_borg on test0
            > run_after_borg on test0
        cmp_dirs: STARTING_CONFIGS configs

    freelance:
        args: --quiet --config test0 mount EMBORG
        cmp_dirs: EMBORG/⟪EMBORG⟫/tests/configs configs
        expected:
            > run_before_borg on test0
            > run_after_borg on test0
        dependencies: fuse
            # if this test fails with “EMBORG: Mountpoint must be a writable”,
            # it is because EMBORG is still mounted from a previous run.

    whitewash:
        args: --quiet --config test0 create
        expected:
            > run_before_first_backup on test0
            > run_before_backup on test0
            > run_before_borg on test0
            > run_after_backup on test0
            > run_after_last_backup on test0
            > emborg error: create, test0:
            >     Failed to create/acquire the lock /⟪EMBORG⟫/tests/repositories/lock (timeout).
            >         If another Emborg or Borg process is using this repository,
            >         please wait for it to finish.
            >         Perhaps you still have an archive mounted?
            >         If so, use ‘emborg umount’ to unmount it.
            >         Perhaps a previous run was killed or terminated with an error?
            >         If so, use ‘emborg breaklock’ to clear the lock.
            > run_after_borg on test0
        expected_type: error
        dependencies: fuse

    toehold:
        args: --quiet --config test0 umount EMBORG
        expected:
            > run_before_borg on test0
            > run_after_borg on test0
        dependencies: fuse

    faculty:
        args: --quiet --config test4 create
        expected:
            > run_before_first_backup 0
            > run_before_first_backup 1
            > run_before_backup 0
            > run_before_backup 1
            > run_before_borg 0
            > run_before_borg 1
            > run_after_backup 0
            > run_after_backup 1
            > run_after_last_backup 0
            > run_after_last_backup 1
            > run_after_borg 0
            > run_after_borg 1

    terminate:
        args: --quiet --config test4 list
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > test4-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > run_after_borg 0
            > run_after_borg 1
        expected_type: regex

    editorial:
        args: --quiet --config test4 files -S
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > Archive: test4-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            >     0B tests/configs/
            >     0B tests/configs/subdir/
            >     0B tests/configs/subdir/file
            >    13B tests/configs/test2passphrase
            >    66B tests/configs/test2excludes
            >    82B tests/configs/test6patterns
            >    87B tests/configs/test7
            >   111B tests/configs/test7patterns
            >   132B tests/configs/test6
            >   133B tests/configs/test9
            >   182B tests/configs/test8
            >   191B tests/configs/test5
            >   526B tests/configs/test0
            >   559B tests/configs/test2
            >   594B tests/configs/overdue.conf
            >   612B tests/configs/test1
            >   614B tests/configs/settings
            >   671B tests/configs/test3
            >   965B tests/configs/test4
            > 1.85kB tests/configs/README
            > Total size = 7.38kB.
            > run_after_borg 0
            > run_after_borg 1
        expected_type: regex

    sparkler:
        remove: configs/test4
        args: --quiet --config test4 compare configs
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > Only in /⟪EMBORG⟫/tests/EMBORG/tests/configs: test4
            > run_after_borg 0
            > run_after_borg 1
        expected_type: diff
        dependencies: fuse

    needy:
        remove: configs/subdir/file
        args: --quiet --config test4 compare configs/subdir
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > Only in /⟪EMBORG⟫/tests/EMBORG/tests/configs/subdir: file
            > run_after_borg 0
            > run_after_borg 1
        expected_type: diff
        dependencies: fuse

    pathway:
        remove: configs tests
        args: --quiet --config test4 extract -f tests/configs
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        cmp_dirs: STARTING_CONFIGS tests/configs

    rewrite:
        remove: configs tests
        args: --quiet --config test4 extract -f /⟪EMBORG⟫/tests/configs
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        cmp_dirs: STARTING_CONFIGS tests/configs

    abuse:
        remove: configs tests
        args: --quiet --config test4 restore configs
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        cmp_dirs: STARTING_CONFIGS configs

    dozen:
        args: --quiet --config test4 mount
        cmp_dirs: EMBORG/tests/configs configs
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        dependencies: fuse

    regime:
        args: --quiet --config test4 umount
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        dependencies: fuse

    aspect:
        args: --quiet --config test4 borg list --glob-archives test4-* --short @repo
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > test4-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > run_after_borg 0
            > run_after_borg 1
        expected_type: regex

    addict:
        args: --quiet --config test4 compare configs
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        dependencies: fuse

    thrill:
        args: --quiet --config test4 compare configs/subdir
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        dependencies: fuse

    blanch:
        args: --quiet --config test4 compare --interactive configs
        expected:
            > run_before_borg 0
            > run_before_borg 1
            > run_after_borg 0
            > run_after_borg 1
        dependencies: fuse

    unbalance:
        args: --quiet --config test5 create
        expected:
            > (?s:.*)
            > .* repository check, no problems found.
            > (?s:.*)
            > Archive consistency check complete, no problems found.
            > (?s:.*)
        expected_type: regex

    lobby:
        args: --quiet --config test5 list
        expected: test5-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    purple:
        args: --quiet --config test5 files -N
        expected:
            > Archive: test5-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > ⟪EMBORG⟫/tests/configs/
            > ⟪EMBORG⟫/tests/configs/README
            > ⟪EMBORG⟫/tests/configs/overdue.conf
            > ⟪EMBORG⟫/tests/configs/settings
            > ⟪EMBORG⟫/tests/configs/subdir/
            > ⟪EMBORG⟫/tests/configs/subdir/file
            > ⟪EMBORG⟫/tests/configs/test0
            > ⟪EMBORG⟫/tests/configs/test1
            > ⟪EMBORG⟫/tests/configs/test2
            > ⟪EMBORG⟫/tests/configs/test2excludes
            > ⟪EMBORG⟫/tests/configs/test2passphrase
            > ⟪EMBORG⟫/tests/configs/test3
            > ⟪EMBORG⟫/tests/configs/test4
            > ⟪EMBORG⟫/tests/configs/test5
            > ⟪EMBORG⟫/tests/configs/test6
            > ⟪EMBORG⟫/tests/configs/test6patterns
            > ⟪EMBORG⟫/tests/configs/test7
            > ⟪EMBORG⟫/tests/configs/test7patterns
            > ⟪EMBORG⟫/tests/configs/test8
            > ⟪EMBORG⟫/tests/configs/test9
        expected_type: regex

    bobbin:
        args: --quiet --config test5 extract configs
        expected:
            > Include pattern 'configs' never matched.
        expected_type: diff

    communion:
        args: --quiet --config test5 extract /⟪EMBORG⟫/tests/configs
        expected:
            > ⟪EMBORG⟫/tests/configs
            > ⟪EMBORG⟫/tests/configs/overdue.conf
            > ⟪EMBORG⟫/tests/configs/README
            > ⟪EMBORG⟫/tests/configs/settings
            > ⟪EMBORG⟫/tests/configs/subdir
            > ⟪EMBORG⟫/tests/configs/subdir/file
            > ⟪EMBORG⟫/tests/configs/test0
            > ⟪EMBORG⟫/tests/configs/test1
            > ⟪EMBORG⟫/tests/configs/test2
            > ⟪EMBORG⟫/tests/configs/test2excludes
            > ⟪EMBORG⟫/tests/configs/test2passphrase
            > ⟪EMBORG⟫/tests/configs/test3
            > ⟪EMBORG⟫/tests/configs/test4
            > ⟪EMBORG⟫/tests/configs/test5
            > ⟪EMBORG⟫/tests/configs/test6
            > ⟪EMBORG⟫/tests/configs/test6patterns
            > ⟪EMBORG⟫/tests/configs/test7
            > ⟪EMBORG⟫/tests/configs/test7patterns
            > ⟪EMBORG⟫/tests/configs/test8
            > ⟪EMBORG⟫/tests/configs/test9
        expected_type: sort-lines
        cmp_dirs: ⟪EMBORG⟫/tests/configs configs

    spurn:
        remove: configs
        args: --quiet --config test5 restore configs
        expected:
            > ⟪EMBORG⟫/tests/configs
            > ⟪EMBORG⟫/tests/configs/overdue.conf
            > ⟪EMBORG⟫/tests/configs/README
            > ⟪EMBORG⟫/tests/configs/settings
            > ⟪EMBORG⟫/tests/configs/subdir
            > ⟪EMBORG⟫/tests/configs/subdir/file
            > ⟪EMBORG⟫/tests/configs/test0
            > ⟪EMBORG⟫/tests/configs/test1
            > ⟪EMBORG⟫/tests/configs/test2
            > ⟪EMBORG⟫/tests/configs/test2excludes
            > ⟪EMBORG⟫/tests/configs/test2passphrase
            > ⟪EMBORG⟫/tests/configs/test3
            > ⟪EMBORG⟫/tests/configs/test4
            > ⟪EMBORG⟫/tests/configs/test5
            > ⟪EMBORG⟫/tests/configs/test6
            > ⟪EMBORG⟫/tests/configs/test6patterns
            > ⟪EMBORG⟫/tests/configs/test7
            > ⟪EMBORG⟫/tests/configs/test7patterns
            > ⟪EMBORG⟫/tests/configs/test8
            > ⟪EMBORG⟫/tests/configs/test9
        expected_type: sort-lines
        cmp_dirs: STARTING_CONFIGS configs

    execute:
        args: --quiet --config test5 mount
        expected: Mounting filesystem
        cmp_dirs: EMBORG/⟪EMBORG⟫/tests/configs STARTING_CONFIGS
        dependencies: fuse

    complaint:
        args: --quiet --config test5 umount
        dependencies: fuse

    adjoin:
        args: --quiet --config test5 borg list --glob-archives test5-* --short @repo
        expected: test5-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    simpleton:
        args: --quiet --config test5 compare configs
        expected: Mounting filesystem
        dependencies: fuse

    resound:
        args: --quiet --config test5 compare --interactive configs
        expected: Mounting filesystem
        dependencies: fuse

    acquit:
        args: --quiet --config test6 create

    harangue:
        args: --quiet --config test6 list
        expected: test6-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    adversary:
        args: --quiet --config test6 files -S
        expected:
            > Archive: test6-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            >     0B tests/configs/
            >     0B tests/configs/subdir/
            >     0B tests/configs/subdir/file
            >    13B tests/configs/test2passphrase
            >    66B tests/configs/test2excludes
            >    82B tests/configs/test6patterns
            >    87B tests/configs/test7
            >   111B tests/configs/test7patterns
            >   132B tests/configs/test6
            >   133B tests/configs/test9
            >   182B tests/configs/test8
            >   191B tests/configs/test5
            >   526B tests/configs/test0
            >   559B tests/configs/test2
            >   594B tests/configs/overdue.conf
            >   612B tests/configs/test1
            >   614B tests/configs/settings
            >   671B tests/configs/test3
            >   965B tests/configs/test4
            > 1.85kB tests/configs/README
            > Total size = 7.38kB.
        expected_type: regex

    intercom:
        remove: configs tests
        args: --quiet --config test6 extract -f tests/configs
        cmp_dirs: STARTING_CONFIGS tests/configs

    embellish:
        remove: configs tests
        args: --quiet --config test6 extract -f /⟪EMBORG⟫/tests/configs
        cmp_dirs: STARTING_CONFIGS tests/configs

    rating:
        remove: configs tests
        args: --quiet --config test6 restore configs
        cmp_dirs: STARTING_CONFIGS configs

    clampdown:
        args: --quiet --config test6 mount
        cmp_dirs: EMBORG/tests/configs configs
        dependencies: fuse

    gawky:
        args: --quiet --config test6 umount
        dependencies: fuse

    huntsman:
        args: --quiet --config test6 borg list --glob-archives test6-* --short @repo
        expected: test6-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    globe:
        args: --quiet --config test6 compare
        expected: emborg error: no diff command available.
        expected_type: error
        dependencies: fuse

    sugar:
        args: --quiet --config test7 create

    mantel:
        args: --quiet --config test7 list
        expected: test7-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    suture:
        args: --quiet --config test7 files -N configs/subdir
        expected:
            > Archive: test7-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > ⟪EMBORG⟫/tests/configs/subdir/
            > ⟪EMBORG⟫/tests/configs/subdir/file
        expected_type: regex

    tadpole:
        args: --config test7 extract configs
        expected:
            > Archive: test7-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > emborg warning: warning emitted by Borg:
            >     Include pattern 'configs' never matched.
        expected_type: regex diff

    footfall:
        args: --quiet --config test7 extract /⟪EMBORG⟫/tests/configs
        cmp_dirs: ⟪EMBORG⟫/tests/configs configs

    louse:
        remove: configs
        args: --quiet --config test7 restore configs
        cmp_dirs: STARTING_CONFIGS configs

    sweetener:
        args: --quiet --config test7 mount
        cmp_dirs: EMBORG/⟪EMBORG⟫/tests/configs STARTING_CONFIGS
        dependencies: fuse

    florist:
        args: --quiet --config test7 umount
        dependencies: fuse

    machete:
        args: --quiet --config test7 borg list --glob-archives test7-* --short @repo
        expected: test7-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    cranberry:
        args: --config test7 delete --repo

    cleanser:
        args: --config test7 list
        expected:
            > emborg error: list, test7:
            >     Repository /⟪EMBORG⟫/tests/repositories does not exist.
        expected_type: error

    harlequin:
        args: --quiet --config test8 init

    master:
        args: --quiet --config test8 create

    chance:
        args: --quiet --config test8 list
        expected: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    stockade:
        args: --quiet --config test8 files -D
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d.\d\d\d\d\d\d configs.symlink/subdir/(file|)
            > \d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d.\d\d\d\d\d\d configs.symlink/subdir/(file|)
                # unfortunately, we cannot check the order because they were created
                # at the same time
        expected_type: regex

    sheikhdom:
        args: --quiet --config test8 files --date 1h --sort-by-name
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/
            > configs.symlink/subdir/file
        expected_type: regex

    complete:
        args: --quiet --config test8 files --date ⟪DATE⟫ --sort-by-name
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/
            > configs.symlink/subdir/file
        expected_type: regex

    diver:
        args: --quiet --config test8 files -O
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > \w+\s* configs.symlink/subdir/
            > \w+\s* configs.symlink/subdir/file
        expected_type: regex

    explain:
        args: --quiet --config test8 files -G
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > \w+\s* configs.symlink/subdir/
            > \w+\s* configs.symlink/subdir/file
        expected_type: regex

    savage:
        args: --quiet --config test8 files -K path
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/
            > configs.symlink/subdir/file
        expected_type: regex

    adapt:
        args: --quiet --config test8 files --name
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir
            > configs.symlink/subdir/file
        expected_type: regex

    novelty:
        args: --quiet --config test8 files --short
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/
            > configs.symlink/subdir/file
        expected_type: regex

    anatomy:
        args: --quiet --config test8 files --short
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/
            > configs.symlink/subdir/file
        expected_type: regex

    salesgirl:
        args: --quiet --config test8 files does-not-exist
        expected: emborg error: not contained in a source directory: does-not-exist.
        expected_type: error

    draper:
        args: --quiet --config test8 files configs.symlink/subdir/file
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/file
        expected_type: regex

    devolve:
        args: --quiet --config test8 files configs.symlink/subdir
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/
            > configs.symlink/subdir/file
        expected_type: regex

    matrix:
        args: --quiet --config test8 files --recursive configs.symlink/subdir
        expected:
            > Archive: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
            > configs.symlink/subdir/
            > configs.symlink/subdir/file
        expected_type: regex

    bathmat:
        remove: configs/subdir/file
        args: --quiet --config test8 extract -f configs.symlink/subdir/file
        cmp_dirs: STARTING_CONFIGS/subdir ./⟪EMBORG⟫/tests/configs/subdir

    allot:
        remove: configs/subdir/file
        args: --quiet --config test8 extract -f /⟪EMBORG⟫/tests/configs.symlink/subdir/file
        cmp_dirs: STARTING_CONFIGS/subdir ./⟪EMBORG⟫/tests/configs/subdir

    clutter:
        remove: configs/subdir
        args: --quiet --config test8 restore configs/subdir
        cmp_dirs: STARTING_CONFIGS/subdir configs/subdir

    interior:
        remove: configs/subdir/file
        args: --quiet --config test8 restore configs/subdir/file
        cmp_dirs: STARTING_CONFIGS/subdir configs/subdir

    craftsman:
        args: --quiet --config test8 mount
        cmp_dirs: EMBORG/configs.symlink/subdir configs.symlink/subdir
        dependencies: fuse

    stretcher:
        args: --quiet --config test8 umount
        dependencies: fuse

    acquaint:
        args: --quiet --config test8 borg list --glob-archives test8-* --short @repo
        expected: test8-\d\d\d\d-\d\d-\d\dT\d\d:\d\d:\d\d
        expected_type: regex

    panther:
        args: --quiet --config test9 create
        dependencies: borg1.2

    archivist:
        args: --quiet --config test9 compact
        dependencies: borg1.2

    planet:
        args: --quiet --config test9 prune
        dependencies: borg1.2

    gable:
        args: --quiet --config test9 delete
        dependencies: borg1.2

    close:
        # this is needed for the API tests
        args: --quiet --config tests create
        expected:
            > run_before_first_backup on test0
            > run_before_backup on test0
            > run_before_borg on test0
            > run_after_backup on test0
            > run_after_borg on test0
            > run_before_backup on test1
            > run_before_borg on test1
            > run_after_backup on test1
            > run_after_borg on test1
            > run_before_backup on test2
            > run_before_borg on test2
            > run_after_backup on test2
            > run_after_borg on test2
            > run_before_backup on test3
            > run_before_borg on test3
            > run_after_backup on test3
            > run_after_last_backup on test3
            > run_after_borg on test3

emborg-overdue:

    predator:
        expected:
            > test0: 0.\d hours
            > test1: 0.\d hours
            > test2: 0.\d hours
            > test3: 0.\d hours
            > test4: 0.\d hours
            > test5: 0.\d hours
            > test6: 0.\d hours
            > test7: 0.\d hours
            >
        expected_type: regex

    smelt:
        args: --no-passes
        expected:

